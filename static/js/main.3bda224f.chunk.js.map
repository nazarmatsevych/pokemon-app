{"version":3,"sources":["api/pokemonTypes.js","components/Card/Card.jsx","components/PokemonStats/PokemonStats.jsx","api/api.js","components/Loader/Loader.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["pokemonTypes","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","Card","pokemon","selectPokemon","className","onClick","id","name","src","alt","types","map","type","style","backgroundColor","slot","moves","length","defaultProps","PokemonStats","slice","weight","stats","ability","stat","base_stat","getAllPokemon","url","a","Promise","resolve","reject","fetch","then","response","json","data","catch","error","Error","getPokemon","Loader","App","useState","pokemonData","setPokemonData","loading","setLoading","query","setQuery","setPokemon","limit","nextPageUrl","setNextPageUrl","downloadData","useCallback","loadLink","loadPokemon","results","next","useEffect","all","console","log","prevData","handlePokemonSelection","pokemonId","filter","filterPokemonByType","p","some","toLowerCase","includes","placeholder","value","onChange","event","target","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3bda224f.chunk.js","sourcesContent":["const pokemonTypes = {\n  normal: '#A8A77A',\n  fire: '#EE8130',\n  water: '#6390F0',\n  electric: '#F7D02C',\n  grass: '#7AC74C',\n  ice: '#96D9D6',\n  fighting: '#C22E28',\n  poison: '#A33EA1',\n  ground: '#E2BF65',\n  flying: '#A98FF3',\n  psychic: '#F95587',\n  bug: '#A6B91A',\n  rock: '#B6A136',\n  ghost: '#735797',\n  dragon: '#6F35FC',\n  dark: '#705746',\n  steel: '#B7B7CE',\n  fairy: '#D685AD'\n};\n\nexport default pokemonTypes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Card.scss';\nimport pokemonTypes from '../../api/pokemonTypes';\n\nexport const Card = ({ pokemon, selectPokemon }) => (\n<div className=\"card\">\n    <div className=\"card__card\"\n      onClick={() => {\n        selectPokemon(pokemon.id);\n      }}>\n      <div className=\"card__container-wrapper\">\n        <div className=\"card__height-container\">\n          {/* <span className=\"card__height\">\n            <div>\n              Height:\n            </div>\n            <div>\n              {`${pokemon.height / 10} m`}\n            </div>\n          </span>\n        </div>\n        <div className=\"card__weight-container\">\n          <span className=\"card__weight\">\n            <div>\n              Weight:\n            </div>\n            <div>\n              {`${pokemon.weight / 100} kg`}\n            </div>\n          </span> */}\n        </div>\n      </div>\n      <div className=\"card__name\">\n        {pokemon.name}\n      </div>\n      <div className=\"card__image-container\">\n        <img\n          className=\"card__image\"\n          src={`https://pokeres.bastionbot.org/images/pokemon/${pokemon.id}.png`}\n          alt={pokemon.name}\n        />\n      </div>\n      <div className=\"card__types\">\n        {pokemon.types.map(type => (\n          <div\n            className=\"card__type\"\n            key={type.slot}\n            style={{ backgroundColor: pokemonTypes[type.type.name] }}\n          >\n            {type.type.name}\n          </div>\n        ))}\n      </div>\n      <div className=\"card__moves\">\n        {`Total moves: ${pokemon.moves.length}`}\n      </div>\n    </div>\n  </div>\n);\n\nCard.propTypes = {\n  pokemon: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    weight: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    types: PropTypes.arrayOf(PropTypes.shape({\n      slot: PropTypes.number\n    })).isRequired,\n    moves: PropTypes.arrayOf(PropTypes.object).isRequired\n  }),\n  selectPokemon: PropTypes.func.isRequired,\n  // openModal: PropTypes.func.isRequired\n};\n\nCard.defaultProps = {\n  pokemon: {}\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './PokemonStats.scss';\n\nexport const PokemonStats = ({ pokemon }) => (\n  <div className=\"stats__container\">\n    <div className=\"stats__image-container\">\n      <img\n        src={`https://pokeres.bastionbot.org/images/pokemon/${pokemon.id}.png`}\n        alt={pokemon.name} className=\"stats__image\"\n      />\n    </div>\n    <div className=\"stats__name\">\n      {`${pokemon.name}`} #{`000${pokemon.id}`.slice(-4)}\n      <br />\n    </div>\n    <tr className=\"stats__stats\">\n      <td className=\"table\">\n        <tr className=\"card__weight\">\n          <td className=\"test4\">Type</td> <td className=\"test5\">{pokemon.types.map(type => type.type.name)[0]}{' '}{pokemon.types.map(type => type.type.name)[1]}</td>\n        </tr>\n        <tr>\n          <td className=\"test3\">Weight</td> <td className=\"test2\">{pokemon.weight / 10}</td>\n        </tr>\n        <tr>\n          <td className=\"test3\">Total moves</td><td className=\"test2\">{pokemon.moves.length}</td>\n        </tr>\n        {/* </div> */}\n        {pokemon.stats.map(ability => (\n          <div className=\"stats__stat-container\" key={ability.stat.name}>\n            <div className=\"stats__stat-name\">\n              <td className=\"test1\">{ability.stat.name}</td> <td className=\"test2\">{ability.base_stat}</td>\n            </div>\n            <div className=\"stats__base-stat\">\n            </div>\n            {/* <div className=\"stats__base-stat-value\">\n            {ability.base_stat}\n          </div> */}\n          </div>\n        ))}\n      </td>\n    </tr>\n  </div>\n);\n\nPokemonStats.propTypes = {\n  pokemon: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    stats: PropTypes.arrayOf(PropTypes.shape({\n      base_stat: PropTypes.number.isRequired,\n      ability: PropTypes.shape({\n        name: PropTypes.string.isRequired\n      })\n    })).isRequired\n  }),\n  selectPokemon: PropTypes.func,\n};\n\nPokemonStats.defaultProps = {\n  pokemon: {},\n  selectPokemon: () => { }\n};\n","\nexport async function getAllPokemon (url) {\n  return new Promise(function (resolve, reject) {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        resolve(data);\n      })\n      .catch(error => {\n        reject(new Error(error));\n      });\n  });\n}\n\nexport async function getPokemon (url) {\n  return new Promise(function (resolve, reject) {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        resolve(data);\n      })\n      .catch(error => {\n        reject(new Error(error));\n      });\n  });\n}","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState, useCallback } from 'react';\nimport './App.scss';\nimport { Card } from './components/Card/Card';\nimport { PokemonStats } from './components/PokemonStats/PokemonStats';\nimport { getAllPokemon, getPokemon } from './api/api';\n// import { URL } from \"./api/constants\";\nimport { Loader } from './components/Loader/Loader';\n\nfunction App() {\n  const [pokemonData, setPokemonData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [query, setQuery] = useState('');\n  const [pokemon, setPokemon] = useState([]);\n  // eslint-disable-next-line no-unused-vars\n  const [limit, setLimit] = useState(12);\n  const [nextPageUrl, setNextPageUrl] = useState(`https://pokeapi.co/api/v2/pokemon/?limit=${limit}`);\n\n  const downloadData = useCallback( async (loadLink) => {\n    setLoading(true);\n    const response = await getAllPokemon(loadLink);\n    await loadPokemon(response.results);\n    setNextPageUrl(response.next);\n    setLoading(false);\n  }, [limit]);\n\n  useEffect(async () => {\n    await downloadData(nextPageUrl);\n  }, []);\n\n  const loadPokemon = async (data) => {\n    const pokemon = await Promise.all(\n      data.map(async pokemon => {\n        return getPokemon(pokemon.url);\n      }));\n      console.log(pokemon);\n\n    // setPokemonData([...pokemonData, ...pokemon]);\n    setPokemonData((prevData) => ([\n      ...prevData,\n      ...pokemon,\n    ]));\n  };\n\n  const handlePokemonSelection = (pokemonId) => {\n    setPokemon(pokemonData.filter(pokemon => pokemon.id === pokemonId));\n  };\n\n  // const filterPokemon = pokemonData.filter(\n  //   pokemon => pokemon.name.toLowerCase().includes(query.toLowerCase())\n  // );\n\n  // const filterPokemonByType = pokemonData.filter(p => p.types.some(slot => slot.type.name === nameFromSelect));\n  const filterPokemonByType = pokemonData.filter(p => p.types.some(slot => slot.type.name.toLowerCase().includes(query.toLowerCase())));\n  // const result = pokemonData.map(p => p.types.map(type => type.type).map(type => type.name.includes(query)));\n\n  return (\n    <>\n      <div className=\"header title is-2\">\n        <div className=\"header__title\">\n          Pokedex\n        </div>\n      </div>\n      {loading\n        ? (\n          <div className=\"loader\">\n            <Loader />\n          </div>\n        )\n        : (\n          <div className=\"main\">\n            <input\n              type=\"text\"\n              id=\"search-query\"\n              className=\"input input is-normal\"\n              placeholder=\"Find pokemon by type\"\n              value={query}\n              onChange={event => {\n                setQuery(event.target.value);\n              }}\n            />\n            <div className=\"main__container\">\n              {filterPokemonByType.map(pokemon => (\n                <Card\n                  key={pokemon.id}\n                  pokemon={pokemon}\n                  selectPokemon={handlePokemonSelection}\n                />\n              ))}\n            </div>\n            <div className=\"main__button-container\">\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={(event) => {\n                  event.preventDefault();\n                  downloadData(nextPageUrl);\n                }}\n              >\n                Load more\n              </button>\n            </div>\n            <div className=\"cardD\">\n              {pokemon.map(pokemon => (\n                <PokemonStats\n                  pokemon={pokemon}\n                  key={pokemon.id}\n                />\n              ))}\n            </div>\n          </div>\n        )}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}